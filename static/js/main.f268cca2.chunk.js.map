{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Panel","styled","div","Light","props","red","yellow","green","App","useState","color","setColor","time","useEffect","document","getElementById","childNodes","style","opacity","timeHandler","setInterval","clearInterval","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+PAIMA,EAAMC,IAAOC,IAAR,oHAOLC,EAAQF,IAAOC,IAAV,iKAOP,SAACE,GAAD,OACAA,EAAMC,KAAN,uCAKA,SAACD,GAAD,OACAA,EAAME,QAAN,0CAKA,SAACF,GAAD,OACAA,EAAMG,OAAN,kDAsCWC,MAjCf,WAAe,MAEaC,mBAAS,GAFtB,mBAENC,EAFM,KAECC,EAFD,KAIPC,EAAM,CAAC,IAAM,IAAM,KAoBzB,OAlBAC,qBAAU,WAERC,SAASC,eAAe,kBAAkBC,WACxCN,GACAO,MAAMC,QAAU,EAGlB,IAAMC,EAAcC,aAAY,WAC9BT,GAAUD,EAAQ,GAAK,GACvBI,SAASC,eAAe,kBAAkBC,WACxCN,GACAO,MAAMC,QAAU,KACjBN,EAAKF,IAGR,OAAO,kBAAMW,cAAcF,OAI3B,eAACnB,EAAD,CAAOsB,GAAG,iBAAV,UACE,cAACnB,EAAD,CAAOmB,GAAG,MAAMjB,KAAG,IACnB,cAACF,EAAD,CAAOmB,GAAG,SAAShB,QAAM,IACzB,cAACH,EAAD,CAAOmB,GAAG,QAAQf,OAAK,QCpDdgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,SAM1BQ,M","file":"static/js/main.f268cca2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\n\nconst Panel=styled.div`\nbackground-color:black;\nwidth:fit-content;\nmargin:10% 0% 0% 40%;\nborder-radius:1em;\n`\n\nconst Light = styled.div`\n  width: 100px;\n  height: 100px;\n  margin:1em;\n  border:none;\n  border-radius:7em;\n  opacity: 0.4;\n  ${(props) =>\n    props.red &&\n    `\n     background-color: red; \n `};\n\n  ${(props) =>\n    props.yellow &&\n    `\n     background-color: yellow; \n `};\n\n  ${(props) =>\n    props.green &&\n    `\n     background-color: rgb(4, 199, 4); \n `};\n`;\nfunction App() {\n  //colors [0-red,1-yellow,2-green]\n  const [color, setColor] = useState(0);\n  //time[3000-red,2000-yellow,1000-green]\n  const time =[3000, 2000, 1000];\n\n  useEffect(() => {\n    //initially having the opacity one for all the lights...\n    document.getElementById(\"traffic-lights\").childNodes[\n      color\n    ].style.opacity = 1;\n\n    //upon the individual color turn changing the opacity of all as 0.4...\n    const timeHandler = setInterval(() => {\n      setColor((color + 1) % 3);\n      document.getElementById(\"traffic-lights\").childNodes[\n        color\n      ].style.opacity = 0.4;\n    }, time[color]);\n\n    //clearing the interval and making the another light to blink...\n    return () => clearInterval(timeHandler);\n  });\n\n  return (\n    <Panel id=\"traffic-lights\">\n      <Light id=\"red\" red />\n      <Light id=\"yellow\" yellow />\n      <Light id=\"green\" green />\n    </Panel>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}